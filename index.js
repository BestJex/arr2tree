module.exports=function(array,options={},callback=(()=>{})){const KEY_ID=options.KEY_ID||"id",KEY_PID=options.KEY_PID||"pid",KEY_ORDER=options.KEY_ORDER||"order",assessRoot="function"==typeof options.assessRoot?options.assessRoot:node=>!!node[KEY_PID],tree=[];let nodeMap={};for(const node of array){const id=node[KEY_ID],pid=node[KEY_PID];assessRoot(node)?(nodeMap[pid]=nodeMap[pid]||[],nodeMap[pid].push(node),callback(node,!1)):(tree.push(node),callback(node,!0)),void 0===nodeMap[id]&&(nodeMap[id]=[]),node.children=nodeMap[id]}for(const key in nodeMap)0>=nodeMap[key].length||nodeMap[key].sort((prev,current)=>prev[KEY_ORDER]-current[KEY_ORDER]);return tree.sort((prev,current)=>prev[KEY_ORDER]-current[KEY_ORDER]),nodeMap=null,tree};